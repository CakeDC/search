SearchableBehavior:
	condLike() added

	formatLike() added (now has like search functionality)

	like before/after enhancement
	
	wildcard enhancement (one ~ and any *)

	redundance reducable (using string keys for definitions and a simple "true")

PRGComponent:
	fix for not throwing warnings

	encode/decode fix with / and - str_replace was at the wrong side of the encoding process!)



EXAMPLE WITH ENHANCEMENTS:

//model
	public $filterArgs = array(
		'search'=> array('type' => 'like', 'encode'=>true, 'before'=>false, 'after'=>false, 'field'=>array('ThisModel.name','OtherModel.name')),
		'partner_id' => array('type' => 'value'),
		'name'=> array('type' => 'query', 'method' => 'searchNameCondition')
	);	
	
	public function searchNameCondition($data = array()) {
		$filter = $data['name'];
		
		$cond = array(
			'OR' => array(
				$this->alias . '.name LIKE' => '' . $this->formatLike($filter) . '',
				$this->alias . '.invoice_number LIKE' => '' . $this->formatLike($filter) . '',
		));
		return $cond;
	}

//controller
	public $presetVars = array(
		'name'=> array(
			'type' => 'value',
			'encode' => true
		),		
		'partner_id' => true,
		'sent' => true,
	);

//search
20??BE*
=> matches 2011BES and 2012BET etc



NEW - MAXIMUM DRY:

Only set the model $filterArgs in named array style:
	public $filterArgs = array(
		'search'=> array('type' => 'like', 'encode'=>true, 'before'=>false, 'after'=>false, 'field'=>array('ThisModel.name','OtherModel.name')),
		'partner_id' => array('type' => 'value'),
		'name'=> array('type' => 'query', 'method' => 'searchNameCondition')
	);

and set controller 
	public $presetVars = true;

no more redundant controller stuff needed anymore